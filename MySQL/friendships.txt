Create a database named "friends" and then import friends.sql.  This will create two new tables: users and friendships.  

Using the below ERD as reference, write a SQL query that returns a list of users along with their friends' names.    

    SELECT users.first_name, users.last_name, user2.first_name as friend_first_name, user2.last_name as friend_last_name
    FROM users 
    JOIN friendships ON friendships.user_id = users.id 
    LEFT JOIN users as user2 ON user2.id = friendships.friend_id

Return all users who are friends with Kermit, make sure their names are displayed in results.

    SELECT user2.first_name as friend_first_name, user2.last_name as friend_last_name, users.first_name, users.last_name
    FROM users 
    JOIN friendships ON friendships.user_id = users.id 
    LEFT JOIN users as user2 ON user2.id = friendships.friend_id
    WHERE user2.first_name = 'Kermit' AND user2.last_name = 'the Frog'


 Return the count of all friendships

    SELECT COUNT(id)
    FROM friendships

Find out who has the most friends and return the count of their friends.

    SELECT  u.first_name ,u.last_name ,COUNT(*)
    FROM
    (
    (SELECT user_id AS user FROM friendships) UNION ALL
    (SELECT friend_id AS user FROM friendships)
    ) AS c
    JOIN users AS u ON u.id = c.user
    GROUP BY user

Create a new user and make them friends with Eli Byers, Kermit The Frog, and Marky Mark

    INSERT INTO users (users.first_name, users.last_name) 
    VALUES('Geoff', 'Schultz');

    INSERT INTO friendships (user_id, friend_id)
    VALUE(	LAST_INSERT_ID(), (SELECT users.id
            FROM users
            WHERE users.first_name = 'Eli' AND users.last_name = 'Byers'))
        
    INSERT INTO friendships (user_id, friend_id)
    VALUE((SELECT users.id
            FROM users
            WHERE users.first_name = 'Geoff' AND users.last_name = 'Schultz'), (SELECT users.id
            FROM users
            WHERE users.first_name = 'Kermit' AND users.last_name = 'The Frog'))

    INSERT INTO friendships (user_id, friend_id)
    VALUE((SELECT users.id
            FROM users
            WHERE users.first_name = 'Geoff' AND users.last_name = 'Schultz'), (SELECT users.id
            FROM users
            WHERE users.first_name = 'Marky' AND users.last_name = 'Mark'))



Return the friends of Eli in alphabetical order

    SELECT u.first_name, u.last_name
    FROM
    (
        (SELECT user_id AS user 
            FROM friendships
            WHERE friendships.friend_id = (SELECT users.id FROM users WHERE users.first_name = 'Eli'))
        UNION ALL
            (SELECT friend_id AS user 
            FROM friendships
            WHERE friendships.user_id = (SELECT users.id FROM users WHERE users.first_name = 'Eli'))
    ) AS t
    JOIN users AS u ON u.id = t.user

Remove Marky Mark from Eliâ€™s friends.

    SELECT friendships.id
    FROM friendships
    JOIN users ON users.id = friendships.user_id
    JOIN users AS users2 ON users2.id = friendships.friend_id
    WHERE (users.first_name = 'Eli' OR users2.first_name = 'Eli') AND (users.first_name = 'Marky' OR users2.first_name = 'Marky')

        // provided the friendship id '5'

    DELETE FROM friendships
    WHERE friendships.id = '5'

Return all friendships, displaying just the first and last name of both friends

    //same as first question?

    SELECT users.first_name, users.last_name, user2.first_name as friend_first_name, user2.last_name as friend_last_name
    FROM users 
    JOIN friendships ON friendships.user_id = users.id 
    LEFT JOIN users as user2 ON user2.id = friendships.friend_id